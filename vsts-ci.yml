# Parallel job definitions
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/phases
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/multiple-phases

# jobs:
# - job: InitialJob
#   strategy:
#     parallel: 2
#   steps:
#   - script: echo hello from initial job
# - job: SubsequentA
#   dependsOn: InitialJob
#   steps:
#   - script: echo hello from subsequent A
# - job: SubsequentB
#   dependsOn: InitialJob
#   steps:
#   - script: echo hello from subsequent B

# running all tests (CI time, includes Cypress start up)
# on 1 machine: Cypress tests took 3:00
# load balanced on 2 machines: 1:46
# load balanced with 3 machines: 1:20
# 4 machines: 1:01
# 10 machines: 0:30

# custom container for the job
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/container-phases
resources:
  containers:
  - container: CypressContainer
    image: cypress/base:10

jobs:
- job: cy_e2e_windows
  pool:
    # vmImage: 'Hosted' # Windows image
    vmImage: 'Hosted VS2017'
  strategy:
    parallel: 1
  steps:
  # "Hosted" and "Hosted VS2017" VM images have older npm version
  - script: npm i -g npm@6
    displayName: 'Install NPM with CI support'
  - script: npm --version && npm ci
    displayName: 'Install NPM dependencies'
  - script: npm run print-env -- BUILD
    displayName: 'print environment variables that start with BUILD'
  - script: npm run cy:verify
    displayName: 'Cypress verify'
  - script: npm run test:ci:record
    displayName: 'Run Cypress tests'
    env:
      CYPRESS_RECORD_KEY: $(cypressKitchensinkRecordKey)

# - job: cy_e2e_docker

#   # Note: when specifying custom container
#   # Due to a bug, you must currently specify "Hosted Ubuntu 1604"
#   # as the pool name in order to run containers. Other pools will not work.
#   # In September 2018, we expect to remove the need to specify a pool.
#   pool:
#     vmImage: 'Ubuntu 16.04'
#     # vmImage: 'Hosted Linux Preview'

#   container: CypressContainer
#   strategy:
#     parallel: 1
#   steps:
#   # in container cypress/base Node is already installed
#   # - task: NodeTool@0
#   #   inputs:
#   #     versionSpec: '10.x'
#   #   displayName: 'Install Node.js'

#   # VSTS hosted Linux agents already have a LOT of dependencies preinstalled
#   # https://github.com/Microsoft/vsts-agent-docker
#   # so we don't have to install all recommended Cypress dependencies
#   # https://on.cypress.io/continuous-integration#Dependencies
#   # but it would be nice if we could use custom Docker image like "cypress/base:10"
#   # - script: apt-get update && apt-get install -y libgconf-2-4
#   #   displayName: 'install dependencies'

#   - script: npm config get cache
#     displayName: 'see NPM cache folder'

#   # - script: du -h ~/.npm/_cacache || true
#   #   displayName: 'current .npm folder'

#   - script: npm ci
#     displayName: 'Install NPM dependencies'
#     env:
#       # avoid multiple progress bar messages
#       # https://github.com/cypress-io/cypress/issues/1243
#       CI: "1"
#     #   CYPRESS_CACHE_FOLDER: /root/.npm/_cacache/Cypress

#   # - script: du -h ~/.npm/_cacache || true
#   #   displayName: '.npm folder after npm ci'

#   # on Linux usually prints /root/.cache/Cypress
#   - script: npx cypress cache path
#     displayName: 'Cypress cached path'
#   - script: npx cypress cache list
#     displayName: 'Cypress list of cached versions'

#   # always interesting to see build-related environment variables
#   # https://docs.microsoft.com/en-us/vsts/pipelines/build/variables?view=vsts
#   - script: npm run print-env -- BUILD
#     displayName: 'print environment variables that start with BUILD'

#   # to record on Cypress dashboard we need to set a secret record key in the CI settings
#   # see https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
#   # to access variables tab, go to "Builds" and then click "✏️ Edit" button
#   # which opens the settings tabs.
#   # then add the variable AND SCROLL TO THE RIGHT to reveal "secret" column

#   - script: npm run cy:verify
#     displayName: 'Cypress verify'

#   - script: npm run test:ci:record:parallel
#     displayName: 'Run Cypress tests'
#     env:
#       CYPRESS_RECORD_KEY: $(cypressKitchensinkRecordKey)
